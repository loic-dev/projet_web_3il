version: '3'
services:
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports: 
      - "8080:80"
      - "443:443"
    networks:
      - internal
    links:
      - db
    volumes:
      - ./data/:/var/www/html/
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./logs/nginx:/var/log/nginx/
      - ./ssl:/etc/nginx/certs
  php:
    build:
      context: .
      dockerfile: php/Dockerfile
    networks:
      - internal
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST}
      - KEY_JWT=${KEY_JWT}
    volumes:
      - ./data/:/var/www/html/
   
    
  db:
    image: mysql:5.7
    container_name: db
    command: mysqld --user=${MYSQL_USER}
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "6033:3306"
    networks:
      - internal
    volumes:
      - dbdata:/var/lib/mysql
      - ./database/dump.sql:/docker-entrypoint-initdb.d/dump.sql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    links:
      - db
    environment:
      - PMA_HOST=${MYSQL_HOST}
      - PMA_PORT=3306
      - PMA_USER=root
      - PMA_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - PMA_ARBITRARY=1
    restart: always
    ports:
      - 8081:80
    networks:
      - internal

 

networks:
  internal:
    driver: bridge

volumes:
  dbdata: